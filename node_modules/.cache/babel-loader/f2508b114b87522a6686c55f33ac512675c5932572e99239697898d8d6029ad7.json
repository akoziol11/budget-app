{"ast":null,"code":"// Future work: add more options and the ability to allocate\n// a certain amount of the budget to each expense\n\nimport axios from \"axios\";\nvar url = \"https://my-json-server.typicode.com/kellybuchanan/WebDev-Spring2021\";\nexport var createOption = function createOption(label, value) {\n  return axios.post(\"\".concat(url, \"/options\"), {\n    label: label,\n    value: value\n  }).then(function (response) {\n    console.log(\"POST response: \", response);\n  }).catch(function (err) {\n    console.log(\"POST error: \", err);\n  });\n};\nexport var getAllOptions = function getAllOptions() {\n  return axios.get('./options.json').then(function (response) {\n    var data = response.data;\n    print(response.data);\n    if (Array.isArray(response.data)) {\n      return response.data; // If it's already an array, return it\n    } else if (typeof response.data === \"object\") {\n      return Object.values(response.data); // Convert object values to an array\n    } else {\n      return []; // Return an empty array if data is neither an array nor object\n    }\n  }).catch(function (err) {\n    console.log(\"GET Error: \", err);\n  });\n};","map":{"version":3,"names":["axios","url","createOption","label","value","post","concat","then","response","console","log","catch","err","getAllOptions","get","data","print","Array","isArray","Object","values"],"sources":["/Users/nicolemellert/git-repos/budget-app/src/Services/Options.js"],"sourcesContent":["// Future work: add more options and the ability to allocate\n// a certain amount of the budget to each expense\n\nimport axios from \"axios\";\nconst url =\n  \"https://my-json-server.typicode.com/kellybuchanan/WebDev-Spring2021\";\nexport const createOption = (label, value) => {\n  return axios\n    .post(`${url}/options`, {\n      label,\n      value\n    })\n    .then((response) => {\n      console.log(\"POST response: \", response);\n    })\n    .catch((err) => {\n      console.log(\"POST error: \", err);\n    });\n};\n\nexport const getAllOptions = () => {\n  return axios\n    .get('./options.json')\n    .then((response) => {\n        const data = response.data;\n        print(response.data)\n      if (Array.isArray(response.data)) {\n        return response.data; // If it's already an array, return it\n      } else if (typeof response.data === \"object\") {\n        return Object.values(response.data); // Convert object values to an array\n      } else {\n        return []; // Return an empty array if data is neither an array nor object\n      }\n    })\n    .catch((err) => {\n      console.log(\"GET Error: \", err);\n    });\n};\n"],"mappings":"AAAA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,IAAMC,GAAG,GACP,qEAAqE;AACvE,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAEC,KAAK,EAAK;EAC5C,OAAOJ,KAAK,CACTK,IAAI,IAAAC,MAAA,CAAIL,GAAG,eAAY;IACtBE,KAAK,EAALA,KAAK;IACLC,KAAK,EAALA;EACF,CAAC,CAAC,CACDG,IAAI,CAAC,UAACC,QAAQ,EAAK;IAClBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;EAC1C,CAAC,CAAC,CACDG,KAAK,CAAC,UAACC,GAAG,EAAK;IACdH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEE,GAAG,CAAC;EAClC,CAAC,CAAC;AACN,CAAC;AAED,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EACjC,OAAOb,KAAK,CACTc,GAAG,CAAC,gBAAgB,CAAC,CACrBP,IAAI,CAAC,UAACC,QAAQ,EAAK;IAChB,IAAMO,IAAI,GAAGP,QAAQ,CAACO,IAAI;IAC1BC,KAAK,CAACR,QAAQ,CAACO,IAAI,CAAC;IACtB,IAAIE,KAAK,CAACC,OAAO,CAACV,QAAQ,CAACO,IAAI,CAAC,EAAE;MAChC,OAAOP,QAAQ,CAACO,IAAI,CAAC,CAAC;IACxB,CAAC,MAAM,IAAI,OAAOP,QAAQ,CAACO,IAAI,KAAK,QAAQ,EAAE;MAC5C,OAAOI,MAAM,CAACC,MAAM,CAACZ,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;IACvC,CAAC,MAAM;MACL,OAAO,EAAE,CAAC,CAAC;IACb;EACF,CAAC,CAAC,CACDJ,KAAK,CAAC,UAACC,GAAG,EAAK;IACdH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEE,GAAG,CAAC;EACjC,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}