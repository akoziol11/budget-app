{"ast":null,"code":"import Parse from\"parse\";/* SERVICE FOR PARSE SERVER OPERATIONS */ // CREATE operation - new lesson with Name\nexport var createIncome=function createIncome(Amount){console.log(\"Creating: \",Amount);var Income=Parse.Object.extend(\"Income\");var income=new Income();// using setter to UPDATE the object\nincome.set(\"salary\",Amount);return income.save().then(function(result){// returns new Lesson object\nreturn result;});};// READ operation - get lesson by ID\nexport var getById=function getById(id){var Income=Parse.Object.extend(\"Income\");var query=new Parse.Query(Income);return query.get(id).then(function(result){// return Lesson object with objectId: id\nreturn result;});};// READ operation - get all lessons in Parse class Lesson\nexport var getAllIncomes=function getAllIncomes(){var Income=Parse.Object.extend(\"Income\");var query=new Parse.Query(Income);return query.find().then(function(results){// returns array of Lesson objects\nreturn results;});};","map":{"version":3,"names":["Parse","createIncome","Amount","console","log","Income","Object","extend","income","set","save","then","result","getById","id","query","Query","get","getAllIncomes","find","results"],"sources":["/Users/nicolemellert/git-repos/budget-app/src/Services/IncomeService.js"],"sourcesContent":["import Parse from \"parse\";\n/* SERVICE FOR PARSE SERVER OPERATIONS */\n\n// CREATE operation - new lesson with Name\nexport const createIncome = (Amount) => {\n  console.log(\"Creating: \", Amount);\n  const Income = Parse.Object.extend(\"Income\");\n  const income = new Income();\n  // using setter to UPDATE the object\n  income.set(\"salary\", Amount);\n  return income.save().then((result) => {\n    // returns new Lesson object\n    return result;\n  });\n};\n\n// READ operation - get lesson by ID\nexport const getById = (id) => {\n  const Income = Parse.Object.extend(\"Income\");\n  const query = new Parse.Query(Income);\n  return query.get(id).then((result) => {\n    // return Lesson object with objectId: id\n    return result;\n  });\n};\n\n// READ operation - get all lessons in Parse class Lesson\nexport const getAllIncomes = () => {\n  const Income = Parse.Object.extend(\"Income\");\n  const query = new Parse.Query(Income);\n  return query.find().then((results) => {\n    // returns array of Lesson objects\n    return results;\n  });\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,0CAEA;AACA,MAAO,IAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,MAAM,CAAK,CACtCC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEF,MAAM,CAAC,CACjC,GAAM,CAAAG,MAAM,CAAGL,KAAK,CAACM,MAAM,CAACC,MAAM,CAAC,QAAQ,CAAC,CAC5C,GAAM,CAAAC,MAAM,CAAG,GAAI,CAAAH,MAAM,CAAC,CAAC,CAC3B;AACAG,MAAM,CAACC,GAAG,CAAC,QAAQ,CAAEP,MAAM,CAAC,CAC5B,MAAO,CAAAM,MAAM,CAACE,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,SAACC,MAAM,CAAK,CACpC;AACA,MAAO,CAAAA,MAAM,CACf,CAAC,CAAC,CACJ,CAAC,CAED;AACA,MAAO,IAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,EAAE,CAAK,CAC7B,GAAM,CAAAT,MAAM,CAAGL,KAAK,CAACM,MAAM,CAACC,MAAM,CAAC,QAAQ,CAAC,CAC5C,GAAM,CAAAQ,KAAK,CAAG,GAAI,CAAAf,KAAK,CAACgB,KAAK,CAACX,MAAM,CAAC,CACrC,MAAO,CAAAU,KAAK,CAACE,GAAG,CAACH,EAAE,CAAC,CAACH,IAAI,CAAC,SAACC,MAAM,CAAK,CACpC;AACA,MAAO,CAAAA,MAAM,CACf,CAAC,CAAC,CACJ,CAAC,CAED;AACA,MAAO,IAAM,CAAAM,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CACjC,GAAM,CAAAb,MAAM,CAAGL,KAAK,CAACM,MAAM,CAACC,MAAM,CAAC,QAAQ,CAAC,CAC5C,GAAM,CAAAQ,KAAK,CAAG,GAAI,CAAAf,KAAK,CAACgB,KAAK,CAACX,MAAM,CAAC,CACrC,MAAO,CAAAU,KAAK,CAACI,IAAI,CAAC,CAAC,CAACR,IAAI,CAAC,SAACS,OAAO,CAAK,CACpC;AACA,MAAO,CAAAA,OAAO,CAChB,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}