{"ast":null,"code":"import Parse from \"parse\";\nexport var createOption = function createOption(label, value) {\n  console.log(\"Creating: \", label, value);\n  var Income = Parse.Object.extend(\"Income\");\n  var income = new Income();\n  income.set(\"label\", label); // Assuming your Parse class has a 'label' column\n  income.set(\"value\", value);\n  return income.save().then(function (result) {\n    return result;\n  });\n};\nexport var getAllOptions = function getAllOptions() {\n  // Assuming you have a local JSON file named 'expenses.json'\n  return fetch(\"/path/to/expenses.json\").then(function (response) {\n    return response.json();\n  }) // Parse the JSON data from the response\n  .then(function (data) {\n    return data.map(function (item) {\n      var Income = Parse.Object.extend(\"Income\");\n      var income = new Income();\n      income.set(\"label\", item.label);\n      income.set(\"value\", item.value);\n      return income;\n    });\n  }).catch(function (error) {\n    console.error(\"Error fetching expenses: \", error);\n    return [];\n  });\n};","map":{"version":3,"names":["Parse","createOption","label","value","console","log","Income","Object","extend","income","set","save","then","result","getAllOptions","fetch","response","json","data","map","item","catch","error"],"sources":["/Users/nicolemellert/git-repos/budget-app/src/Services/Options.js"],"sourcesContent":["import Parse from \"parse\";\n\nexport const createOption = (label, value) => {\n  console.log(\"Creating: \", label, value);\n  const Income = Parse.Object.extend(\"Income\");\n  const income = new Income();\n\n  income.set(\"label\", label); // Assuming your Parse class has a 'label' column\n  income.set(\"value\", value);\n  return income.save().then((result) => {\n    return result;\n  });\n};\n\nexport const getAllOptions = () => {\n  // Assuming you have a local JSON file named 'expenses.json'\n  return fetch(\"/path/to/expenses.json\") \n    .then((response) => response.json()) // Parse the JSON data from the response\n    .then((data) => {\n      return data.map((item) => {\n        const Income = Parse.Object.extend(\"Income\");\n        const income = new Income();\n        income.set(\"label\", item.label);\n        income.set(\"value\", item.value);\n        return income;\n      });\n    })\n    .catch((error) => {\n      console.error(\"Error fetching expenses: \", error);\n      return [];\n    });\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAEC,KAAK,EAAK;EAC5CC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,KAAK,EAAEC,KAAK,CAAC;EACvC,IAAMG,MAAM,GAAGN,KAAK,CAACO,MAAM,CAACC,MAAM,CAAC,QAAQ,CAAC;EAC5C,IAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC,CAAC;EAE3BG,MAAM,CAACC,GAAG,CAAC,OAAO,EAAER,KAAK,CAAC,CAAC,CAAC;EAC5BO,MAAM,CAACC,GAAG,CAAC,OAAO,EAAEP,KAAK,CAAC;EAC1B,OAAOM,MAAM,CAACE,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,MAAM,EAAK;IACpC,OAAOA,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EACjC;EACA,OAAOC,KAAK,CAAC,wBAAwB,CAAC,CACnCH,IAAI,CAAC,UAACI,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;EAAA,EAAC,CAAC;EAAA,CACpCL,IAAI,CAAC,UAACM,IAAI,EAAK;IACd,OAAOA,IAAI,CAACC,GAAG,CAAC,UAACC,IAAI,EAAK;MACxB,IAAMd,MAAM,GAAGN,KAAK,CAACO,MAAM,CAACC,MAAM,CAAC,QAAQ,CAAC;MAC5C,IAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC,CAAC;MAC3BG,MAAM,CAACC,GAAG,CAAC,OAAO,EAAEU,IAAI,CAAClB,KAAK,CAAC;MAC/BO,MAAM,CAACC,GAAG,CAAC,OAAO,EAAEU,IAAI,CAACjB,KAAK,CAAC;MAC/B,OAAOM,MAAM;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,CACDY,KAAK,CAAC,UAACC,KAAK,EAAK;IAChBlB,OAAO,CAACkB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO,EAAE;EACX,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}