{"ast":null,"code":"// Future work: add more options and the ability to allocate\n// a certain amount of the budget to each expense\nimport Parse from \"parse\";\nvar url = \"https://my-json-server.typicode.com/kellybuchanan/WebDev-Spring2021\";\nexport var createOption = function createOption(label, value) {\n  console.log(\"Creating: \", label, value);\n  var Income = Parse.Object.extend(\"Income\");\n  var income = new Income();\n  income.set(\"value\", Value);\n  return income.save().then(function (result) {\n    return result;\n  });\n};\nexport var getAllOptions = function getAllOptions() {\n  var Income = Parse.Object.extend(\"Income\");\n  var query = new Parse.Query(Income);\n  return query.find().then(function (result) {\n    return results;\n  });\n};\n\n// export const getAllOptions = () => {\n//   return axios\n//     .get(`../Services/options.json`)\n//     .then((response) => {\n//       if (Array.isArray(response.data)) {\n//         return response.data; // If it's already an array, return it\n//       } else if (typeof response.data === \"object\") {\n//         return Object.values(response.data); // Convert object values to an array\n//       } else {\n//         return []; // Return an empty array if data is neither an array nor object\n//       }\n//     })\n//     .catch((err) => {\n//       console.log(\"GET Error: \", err);\n//     });\n// };","map":{"version":3,"names":["Parse","url","createOption","label","value","console","log","Income","Object","extend","income","set","Value","save","then","result","getAllOptions","query","Query","find","results"],"sources":["/Users/nicolemellert/git-repos/budget-app/src/Services/Options.js"],"sourcesContent":["// Future work: add more options and the ability to allocate\n// a certain amount of the budget to each expense\nimport Parse from \"parse\";\nconst url =\n  \"https://my-json-server.typicode.com/kellybuchanan/WebDev-Spring2021\";\nexport const createOption = (label, value) => {\n  console.log(\"Creating: \", label, value);\n  const Income = Parse.Object.extend(\"Income\");\n  const income = new Income();\n\n  income.set(\"value\", Value);\n  return income.save().then((result) => {\n    return result;\n  });\n};\n\nexport const getAllOptions = () => {\n  const Income = Parse.Object.extend(\"Income\");\n  const query = new Parse.Query(Income);\n  return query.find().then((result) => {\n    return results;\n  });\n};\n\n// export const getAllOptions = () => {\n//   return axios\n//     .get(`../Services/options.json`)\n//     .then((response) => {\n//       if (Array.isArray(response.data)) {\n//         return response.data; // If it's already an array, return it\n//       } else if (typeof response.data === \"object\") {\n//         return Object.values(response.data); // Convert object values to an array\n//       } else {\n//         return []; // Return an empty array if data is neither an array nor object\n//       }\n//     })\n//     .catch((err) => {\n//       console.log(\"GET Error: \", err);\n//     });\n// };\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,IAAMC,GAAG,GACP,qEAAqE;AACvE,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAEC,KAAK,EAAK;EAC5CC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,KAAK,EAAEC,KAAK,CAAC;EACvC,IAAMG,MAAM,GAAGP,KAAK,CAACQ,MAAM,CAACC,MAAM,CAAC,QAAQ,CAAC;EAC5C,IAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC,CAAC;EAE3BG,MAAM,CAACC,GAAG,CAAC,OAAO,EAAEC,KAAK,CAAC;EAC1B,OAAOF,MAAM,CAACG,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,MAAM,EAAK;IACpC,OAAOA,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EACjC,IAAMT,MAAM,GAAGP,KAAK,CAACQ,MAAM,CAACC,MAAM,CAAC,QAAQ,CAAC;EAC5C,IAAMQ,KAAK,GAAG,IAAIjB,KAAK,CAACkB,KAAK,CAACX,MAAM,CAAC;EACrC,OAAOU,KAAK,CAACE,IAAI,CAAC,CAAC,CAACL,IAAI,CAAC,UAACC,MAAM,EAAK;IACnC,OAAOK,OAAO;EAChB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}