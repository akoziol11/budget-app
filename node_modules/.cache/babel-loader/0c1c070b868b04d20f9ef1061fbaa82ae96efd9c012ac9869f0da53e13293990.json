{"ast":null,"code":"var _jsxFileName = \"/Users/nicolemellert/git-repos/budget-app/src/Components/BudgetTool/ExpenseList.js\",\n  _this = this;\nimport React from \"react\";\n// Loads the JSON data into the checkboxes as a series of options\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ExpenseList = function ExpenseList(_ref) {\n  var options = _ref.options;\n  var optionItems = [];\n  if (!Array.isArray(options)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No options available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, _this); // or display an error message\n  }\n\n  options.forEach(function (option) {\n    optionItems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, _this), option.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this)\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: optionItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, _this);\n};\n_c = ExpenseList;\nexport default ExpenseList;\nvar _c;\n$RefreshReg$(_c, \"ExpenseList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ExpenseList","_ref","options","optionItems","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","forEach","option","push","type","label","value","_c","$RefreshReg$"],"sources":["/Users/nicolemellert/git-repos/budget-app/src/Components/BudgetTool/ExpenseList.js"],"sourcesContent":["import React from \"react\";\n// Loads the JSON data into the checkboxes as a series of options\nconst ExpenseList = ({ options }) => {\n  const optionItems = [];\n  if (!Array.isArray(options)) {\n    return <div>No options available</div>; // or display an error message\n  }\n\n  options.forEach((option) => {\n    optionItems.push(\n      <div key={option.value}>\n        <label>\n          <input type=\"checkbox\" />\n          {option.label}\n        </label>\n      </div>\n    );\n  });\n\n  return <div>{optionItems}</div>;\n};\n\nexport default ExpenseList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAoB;EAAA,IAAdC,OAAO,GAAAD,IAAA,CAAPC,OAAO;EAC5B,IAAMC,WAAW,GAAG,EAAE;EACtB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,OAAO,CAAC,EAAE;IAC3B,oBAAOH,OAAA;MAAAO,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAK,CAAC,CAAC,CAAC;EAC1C;;EAEAT,OAAO,CAACU,OAAO,CAAC,UAACC,MAAM,EAAK;IAC1BV,WAAW,CAACW,IAAI,eACdf,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAOgB,IAAI,EAAC;QAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAE,CAAC,EACxBE,MAAM,CAACG,KAAK;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACR;IAAC,GAJAE,MAAM,CAACI,KAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAKjB,CACP,CAAC;EACH,CAAC,CAAC;EAEF,oBAAOZ,OAAA;IAAAO,QAAA,EAAMH;EAAW;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAAM,CAAC;AACjC,CAAC;AAACO,EAAA,GAlBIlB,WAAW;AAoBjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}